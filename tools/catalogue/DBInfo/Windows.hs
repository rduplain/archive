-- NOTE: use GHC flag -fcontext-stack47 with this module
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module DBInfo.Windows where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
windows :: Table
    ((RecCons Id (Expr (Maybe Int))
      (RecCons Detector_id (Expr Int)
       (RecCons Observation_id (Expr Int)
        (RecCons Polarization_id (Expr Int)
         (RecCons Receiver_id (Expr Int)
          (RecCons Frequency (Expr Double)
           (RecCons Bandwidth (Expr Double) RecNil))))))))

windows = baseTable "windows" $
          hdbMakeEntry Id #
          hdbMakeEntry Detector_id #
          hdbMakeEntry Observation_id #
          hdbMakeEntry Polarization_id #
          hdbMakeEntry Receiver_id #
          hdbMakeEntry Frequency #
          hdbMakeEntry Bandwidth

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Id Field
---------------------------------------------------------------------------

data Id = Id

instance FieldTag Id where fieldName _ = "id"

xid :: Attr Id (Maybe Int)
xid = mkAttr Id

---------------------------------------------------------------------------
-- Detector_id Field
---------------------------------------------------------------------------

data Detector_id = Detector_id

instance FieldTag Detector_id where fieldName _ = "detector_id"

detector_id :: Attr Detector_id Int
detector_id = mkAttr Detector_id

---------------------------------------------------------------------------
-- Observation_id Field
---------------------------------------------------------------------------

data Observation_id = Observation_id

instance FieldTag Observation_id where
    fieldName _ = "observation_id"

observation_id :: Attr Observation_id Int
observation_id = mkAttr Observation_id

---------------------------------------------------------------------------
-- Polarization_id Field
---------------------------------------------------------------------------

data Polarization_id = Polarization_id

instance FieldTag Polarization_id where
    fieldName _ = "polarization_id"

polarization_id :: Attr Polarization_id Int
polarization_id = mkAttr Polarization_id

---------------------------------------------------------------------------
-- Receiver_id Field
---------------------------------------------------------------------------

data Receiver_id = Receiver_id

instance FieldTag Receiver_id where fieldName _ = "receiver_id"

receiver_id :: Attr Receiver_id Int
receiver_id = mkAttr Receiver_id

---------------------------------------------------------------------------
-- Frequency Field
---------------------------------------------------------------------------

data Frequency = Frequency

instance FieldTag Frequency where fieldName _ = "frequency"

frequency :: Attr Frequency Double
frequency = mkAttr Frequency

---------------------------------------------------------------------------
-- Bandwidth Field
---------------------------------------------------------------------------

data Bandwidth = Bandwidth

instance FieldTag Bandwidth where fieldName _ = "bandwidth"

bandwidth :: Attr Bandwidth Double
bandwidth = mkAttr Bandwidth
