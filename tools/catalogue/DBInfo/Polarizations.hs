-- NOTE: use GHC flag -fcontext-stack43 with this module
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module DBInfo.Polarizations where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
polarizations :: Table
    ((RecCons Id (Expr (Maybe Int))
      (RecCons Polarization_type_id (Expr Int)
       (RecCons Name (Expr String) RecNil))))

polarizations = baseTable "polarizations" $
                hdbMakeEntry Id #
                hdbMakeEntry Polarization_type_id #
                hdbMakeEntry Name

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Id Field
---------------------------------------------------------------------------

data Id = Id

instance FieldTag Id where fieldName _ = "id"

xid :: Attr Id (Maybe Int)
xid = mkAttr Id

---------------------------------------------------------------------------
-- Polarization_type_id Field
---------------------------------------------------------------------------

data Polarization_type_id = Polarization_type_id

instance FieldTag Polarization_type_id where
    fieldName _ = "polarization_type_id"

polarization_type_id :: Attr Polarization_type_id Int
polarization_type_id = mkAttr Polarization_type_id

---------------------------------------------------------------------------
-- Name Field
---------------------------------------------------------------------------

data Name = Name

instance FieldTag Name where fieldName _ = "name"

name :: Attr Name String
name = mkAttr Name
