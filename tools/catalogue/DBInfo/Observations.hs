-- NOTE: use GHC flag -fcontext-stack49 with this module
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module DBInfo.Observations where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
observations :: Table
    ((RecCons Id (Expr (Maybe Int))
      (RecCons Project_id (Expr Int)
       (RecCons Source_id (Expr Int)
        (RecCons Scan (Expr Int)
         (RecCons Datetime (Expr String)
          (RecCons Exposure (Expr Int)
           (RecCons Ra2000 (Expr Double)
            (RecCons Dec2000 (Expr Double)
             (RecCons Filesize (Expr Int) RecNil))))))))))

observations = baseTable "observations" $
               hdbMakeEntry Id #
               hdbMakeEntry Project_id #
               hdbMakeEntry Source_id #
               hdbMakeEntry Scan #
               hdbMakeEntry Datetime #
               hdbMakeEntry Exposure #
               hdbMakeEntry Ra2000 #
               hdbMakeEntry Dec2000 #
               hdbMakeEntry Filesize

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Id Field
---------------------------------------------------------------------------

data Id = Id

instance FieldTag Id where fieldName _ = "id"

xid :: Attr Id (Maybe Int)
xid = mkAttr Id

---------------------------------------------------------------------------
-- Project_id Field
---------------------------------------------------------------------------

data Project_id = Project_id

instance FieldTag Project_id where fieldName _ = "project_id"

project_id :: Attr Project_id Int
project_id = mkAttr Project_id

---------------------------------------------------------------------------
-- Source_id Field
---------------------------------------------------------------------------

data Source_id = Source_id

instance FieldTag Source_id where fieldName _ = "source_id"

source_id :: Attr Source_id Int
source_id = mkAttr Source_id

---------------------------------------------------------------------------
-- Scan Field
---------------------------------------------------------------------------

data Scan = Scan

instance FieldTag Scan where fieldName _ = "scan"

scan :: Attr Scan Int
scan = mkAttr Scan

---------------------------------------------------------------------------
-- Datetime Field
---------------------------------------------------------------------------

data Datetime = Datetime

instance FieldTag Datetime where fieldName _ = "datetime"

datetime :: Attr Datetime String
datetime = mkAttr Datetime

---------------------------------------------------------------------------
-- Exposure Field
---------------------------------------------------------------------------

data Exposure = Exposure

instance FieldTag Exposure where fieldName _ = "exposure"

exposure :: Attr Exposure Int
exposure = mkAttr Exposure

---------------------------------------------------------------------------
-- Ra2000 Field
---------------------------------------------------------------------------

data Ra2000 = Ra2000

instance FieldTag Ra2000 where fieldName _ = "ra2000"

ra2000 :: Attr Ra2000 Double
ra2000 = mkAttr Ra2000

---------------------------------------------------------------------------
-- Dec2000 Field
---------------------------------------------------------------------------

data Dec2000 = Dec2000

instance FieldTag Dec2000 where fieldName _ = "dec2000"

dec2000 :: Attr Dec2000 Double
dec2000 = mkAttr Dec2000

---------------------------------------------------------------------------
-- Filesize Field
---------------------------------------------------------------------------

data Filesize = Filesize

instance FieldTag Filesize where fieldName _ = "filesize"

filesize :: Attr Filesize Int
filesize = mkAttr Filesize
